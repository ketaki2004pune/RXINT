///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Master
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The NavigateToDesignTwosamplesDOMParallel recording.
    /// </summary>
    [TestModule("9cc79e30-6bce-4c8f-9353-3177e2effb38", ModuleType.Recording, 1)]
    public partial class NavigateToDesignTwosamplesDOMParallel : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MasterRepository repository.
        /// </summary>
        public static MasterRepository repo = MasterRepository.Instance;

        static NavigateToDesignTwosamplesDOMParallel instance = new NavigateToDesignTwosamplesDOMParallel();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public NavigateToDesignTwosamplesDOMParallel()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static NavigateToDesignTwosamplesDOMParallel Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (AccessibleName='Continuous') on item 'MainWindow.Continuous'.", repo.MainWindow.ContinuousInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.MainWindow.ContinuousInfo, "AccessibleName", "Continuous");
            Delay.Milliseconds(100);
            
            // Make Sure of East application is accessible and Menu Options are available
            Report.Log(ReportLevel.Info, "Invoke action", "Make Sure of East application is accessible and Menu Options are available\r\nInvoking EnsureVisible() on item 'MainWindow.Continuous'.", repo.MainWindow.ContinuousInfo, new RecordItemIndex(1));
            repo.MainWindow.Continuous.EnsureVisible();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MainWindow.TwoSamples' at 28;42.", repo.MainWindow.TwoSamplesInfo, new RecordItemIndex(2));
            repo.MainWindow.TwoSamples.Click("28;42");
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
